api_configs:
    api_port - HTTP API端口
    ws_port - 主控端中转Minecraft日志的WebSocket服务器端口
    ws_ping_timeout - 上述WebSocket服务器中连接的超时时间
    logs_dir - 日志目录，相对于index.js所在目录
    rows_per_log - 每个日志最多储存多少行
    max_logs_retained - 最多保留多少个日志文件（不包括latest.log）
    qcloud - 腾讯云API相关设定
        - region 地域
        - instance_family_regex 机型族筛选正则表达式（反斜杠\要转义，比如表达\，需要使用\\）
        - instance_cpu 机型CPU核数
        - instance_memory 机型内存大小（单位：GB）
        - instance_bandwidth 机型内网带宽最小值（单位：Gbps）
        - hour_price_range 每小时价格区间，比如[0,0.3]（单位：元），这里是和折扣后价格进行对比。注意：这个不包含带宽，磁盘等费用
        - project_id 项目ID（在腾讯云控制台右上角头像处可以看到“项目管理”）
        警告！project_id一定不要用默认项目！

        - image_id 实例的启动镜像ID（建议是自制镜像）
        - system_disk（可以留null，即为默认分配系统盘）系统盘配置
            - disk_type 系统盘类型（详见腾讯云文档）
            - disk_size 系统盘大小（单位：GB）
        - vpc 私有网络配置（因为有的实例并不支持基础网络，这里务必使用私有网络）
            - vpc_id 私有网络ID
            - subnet_id 子网ID
            # 全部留DEFAULT，即为默认私网
        - max_bandwidth_out 最大出带宽（单位：Mbps）
        - security_group_id 安全组ID
        - host_name 主机名
        - max_spot_price 最大竞价出价（单位：元）
    instance_run_timeout - 等待实例运行的最长时间（单位：毫秒）
    instance_deploy_sh - BottleM实例“基地”部署的Shell脚本文件名，脚本存放在./scripts/中
    instance_connect_retry - 连接实例的重试次数，当insSideMonitor连接实例发生错误(err)时，会至多重试这么多次
    ssh_ready_timeout - ssh连接实例的超时时间（单位：毫秒）
    ssh_keep_alive_interval - ssh保持连接的间隔时间（单位：毫秒）
    tokens - 主控端token相关设置
        - default_validity - 默认token有效期（单位：毫秒）
            【默认】720000(12分钟
        - max_temp_tokens_num - 最多允许多少个临时token，超出的话会停止新建临时token，一定程度上起到了限制访问数量的作用
            【默认】200
        - temp_permissions - 临时token的权限，和user_tokens.json的权限配置一致
            【默认】[
                "server.normal.launch",
                "server.query.mc"
            ]
    ins_side - 实例端的配置
        - ws_port 实例端websocket连接端口，整个部署需要和实例端进行合作
            【默认】9527
        - ws_ping_timeout 实例端websocket连接超时时间（单位：毫秒）
            【默认】30000
        - data_dir 实例端部署的脚本和基本配置文件的上传目标目录
            必须是绝对路径
            【默认】'/root/baseData'
        - deploy_scripts 部署Minecraft服务器的脚本文件名，会从remote_dir中读取，是一个数组，从头至尾执行

        - launch_script 启动Minecraft服务器的脚本文件名，会从remote_dir中读取

        - server_scripts Minecraft服务器相关的脚本，会从remote_dir中读取

            - stop_server 停止Minecraft服务器的脚本文件名
                【默认】'stop_server.sh'

            - check_process 检查Java进程是否存在的脚本文件名，脚本如果没有输出任何内容，代表进程不存在
                【默认】'check_process.sh'

            - check_termination 检查竞价实例是否即将终止的脚本文件名，脚本如果没有输出任何内容，代表实例即将被终止
                【默认】'check_termination.sh'

        - incremental_backup 增量备份相关

            - enable 是否启用增量备份
                【默认】true

            - interval 增量备份间隔时间（单位：毫秒）
                【默认】600000

            - dest_dir 服务器运行中增量备份的输出目录
                必须是绝对路径
                【默认】'/root/increments'

            - scripts 增量备份上传/下载相关脚本文件名，会从remote_dir中读取

                - backup 打包压缩包并上传一次增量备份的脚本文件名
                    【默认】'incre_backup.sh'

                - restore 恢复一个压缩包中的增量备份文件
                    【默认】'incre_restore.sh'

                - discard 抛弃所有增量备份的脚本文件名
                    【默认】'incre_discard.sh'

            - src_dirs 增量备份针对的目录，是一个数组
                必须是绝对路径
                【默认】[
                    "/root/minecraft/world",
                    "/root/minecraft/world_nether",
                    "/root/minecraft/world_the_end"
                ]

        - server_ending_scripts 服务器关闭后的脚本

            如果配置了check_packed_server_size，请把服务器打包到packed_server_dir中，实例端会再扫描一遍压缩包大小进行检查。

            - pack 压缩打包Minecraft服务器的脚本
                【默认】'compress_and_pack.sh'

            - upload 打包后上传压缩包的脚本
                【默认】'upload_server.sh'

        - rcon RCON连接相关配置
            请确定RCON已经在Minecraft服务器端启用

            - port RCON连接端口
                【默认】25575
            - password RCON连接密码
                【默认】'123456'

        - mc_server_log Minecraft服务器日志文件路径，用于监视
            一定要是绝对路径
            【默认】'/root/minecraft/logs/latest.log'

        - packed_server_dir Minecraft服务器文件压缩包所在目录，无论是刚刚开始部署的解包，还是服务器关闭后的打包，都是在这个目录内进行的，另外程序可能还会扫描该目录内压缩包总大小，在服务器关闭打包后进行比对
            必须是绝对路径
            【默认】'/root/serverPacked'

        - mc_server_dir Minecraft服务端所在目录(解压会解压到这里)
            必须是绝对路径
            【默认】'/root/minecraft'

        - script_exec_dir 上述shell脚本文件的执行所在目录(cwd)
            必须是绝对路径
            【默认】'/root'

        - mc_server_launch_timeout Minecraft服务器启动的超时时间（单位：毫秒），这个时间从成功执行完所有部署脚本deploy_scripts后开始计算
            【默认】90000

        - server_idling_timeout Minecraft最多闲置多长时间后自动关闭（单位：毫秒）
            【默认】900000

        - player_login_reset_timeout 有玩家登入后是否重置上述倒计时
            【默认】true

        - check_packed_server_size 最后上传打包文件前是否检查打包文件大小是否在允许范围内（百分数）（和部署时刚下载的压缩大小进行比对）
            维护模式下本选项无效，不进行检查
            设置为0表示不检查
            【默认】90


status_codes:
    每一项中：
        msg - 状态信息
        inform - 是否通知群内成员（需要对接机器人api）


除了instance_deploy_sh外（因为受ssh配置的AcceptEnv限制），所有shell脚本执行时都有环境变量：
    DATA_DIR - 实例端数据目录，用于存放数据文件(同remote_dir)
    PACK_DIR - 打包后的服务端的目录(同packed_server_dir)
    FRAGMENTS_DIR - 增量备份的碎片目录(同backup_fragments_dir)
    MC_DIR - Minecraft服务端的目录(同mc_server_dir)
    TIMESTAMP - 执行脚本时的毫秒级时间戳
    qcloud模块定义的环境变量：
        QCLOUD_SECRET_ID - 密钥ID
        QCLOUD_SECRET_KEY - 密钥KEY
    incremental_backup部分的独有环境变量：
        BACKUP_DEST_DIR - 备份目标目录
        RESTORE_DEST_DIR - 恢复备份目标目录
        - 仅限backup和restore脚本：
            BACKUP_NAME - 提供的备份文件名，必须用上，不包括扩展名
        - 仅限discard脚本：
            BACKUP_NAME_LIST - 提供的备份文件名列表，不包括扩展名，形如file1.txt file2.txt file3.txt

警告！不要使用默认项目！为Minecraft服务器单独开一个项目！

腾讯云API需要的权限：
CVM查询创建退回,密匙创建/销毁相关,COS访问

实例镜像中安装coscli后生成配置文件，为了安全性不要填写其中的
secretId和secretKey（当然填了也不是不行）

文档中一定要写整个启动到回收的过程，免得以后你自己都看不懂了

遇到个哭笑不得的错误，服务器文件列表filelist.txt我在Windows上创建的，行尾序列是CRLF，但是在Linux中是LF，由此导致脚本出错。

check_packed_server_size不为0时，部署脚本中在下载压缩包后不要删除了，实例端需要记录一下文件大小！记录之后会自动删除。

check_packed_server_size为0时，服务器不会自动删除压缩包，需要在脚本中添加删除语句。

实例端部署的时候出错是无法恢复的，请多次测试部署脚本，脚本不要抛出错误

特殊的错误：当没有合适的CVM服务器资源时，会回到2000状态，不会进入错误状态

一定要记得配置安全组，开启Websocket端口。

RCON端口一定不要在安全组中开放！仅在本地使用！不然是不安全的

如果没有开启增量备份，实例被强制回收时不会进入紧急模式。

为了防止每次记录日志时都要扫描整个日志目录，专门有一个.lognum文件记录日志情况，要删除日志就要一起删掉